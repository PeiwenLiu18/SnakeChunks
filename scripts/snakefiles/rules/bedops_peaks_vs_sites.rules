# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

#if not "peakcalling" in config.keys():
#    sys.exit("peakcalling tools must be defined in the config file")

#peakcallers = config["peakcalling"].split()

# genome_file = os.path.join(config["dir"]["genome"], )
# 
# chrom_size = re.sub('\.fa$', '', genome_file) + ".genome"
# 
# fasta_file= "Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.dna.chromosome.Chromosome.fa"
# config["dir"]["genome"] + os.path.splitext(os.path.basename(fasta_file))[0] + ".genome"
# 
# config["dir"]["genome"] + "/" + os.path.splitext(os.path.basename(config["genome"]["fasta_file"]))[0] + ".genome"

# Rule
rule bedops_peaks_vs_sites:
    """
    Required parameters: 
        config["qsub"]

    Contributors: Claire Rioualen
    """
	input:
		sites = "{dir}/{TF}/{TF}_BS.bed",
		peaks = "{dir}/{TF}/{TF}_peaks.bed",
		genome = config["dir"]["genome"] + "/" + os.path.splitext(os.path.basename(config["genome"]["fasta_file"]))[0] + ".genome"
	output: 
		sites_found = "{dir}/{TF}/found/{TF}_sites_found.bed",
		peaks_found = "{dir}/{TF}/found/{TF}_peaks_found.bed",
		sites_not_found = "{dir}/{TF}/not_found/{TF}_sites_not_found.bed",
		seq_not_found = "{dir}/{TF}/not_found/{TF}_seq_not_found.bed",
		new = "{dir}/{TF}/new/{TF}_peaks_new.bed"
	log: "{dir}/{TF}/{TF}_sites.log"
	benchmark: "{dir}/{TF}/{TF}_sites_benchmark.txt"
	params: qsub = config["qsub"] + " -e {dir}/{TF}/{TF}_sites_qsub.err -o {dir}/{TF}/{TF}_sites_qsub.out"
	conda:  "../envs/bedops.yaml"
	shell:"""
(bedops --element-of {input.sites} {input.peaks} > {output.sites_found}
bedops --element-of 1 {input.peaks} {input.sites} > {output.peaks_found}
bedops --not-element-of {input.sites} {input.peaks} > {output.sites_not_found}
bedtools slop -i {output.sites_not_found} -g {input.genome} -b 50 > {output.seq_not_found}
bedops --not-element-of 0% {input.peaks} {input.sites} > {output.new}) 2> {log}
"""


