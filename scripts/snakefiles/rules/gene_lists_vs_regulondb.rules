

rule genelists_vs_regulondb:
    input:
        chip_genes = expand(expand(PEAKS_DIR + "/{treat}_vs_{control}/{{peakcaller}}/{treat}_vs_{control}_{{trimming}}_{{mapping_chip}}_{{peakcaller}}_gene_list.txt", zip, treat=chip_treatment, control=chip_control), peakcaller=peakcalling, trimming=trimming, mapping_chip=mapping_chip),
        rna_genes = expand(expand(DEG_DIR + "/{test}_vs_{ref}/{{deg}}/{test}_vs_{ref}_{{trimming}}_{{mapping_rna}}_{{read_counts}}_{{deg}}_gene_list.txt", zip, test=rna_test, ref=rna_reference), deg=diffexpr, trimming=trimming, mapping_rna=mapping_rna, read_counts=read_counts),
        regulondb_tus = REGULON_DIR + "/TUSet.txt",
        regulondb_sites = REGULON_DIR + "/BindingSiteSet.txt",
        regulondb_gene_product = REGULON_DIR + "/GeneProductSet.txt"       
    params:
        rscript = "SnakeChunks/scripts/RSnakeChunks/misc/gene_lists_comparison.R",
        outdir = INTEGRATION_DIR,
        image_format = venn_format,
        TF = TF,
        verbose = 1
    output:
        venn = VENN,
        gene_table = TABLE,
        chip_genes_gff = GFF_CHIP,
        rna_genes_gff = GFF_RNA,
        regulon_genes_gff = GFF_REGULON,
    log: INTEGRATION_DIR + "/" + outdir_prefix + ".log"
    benchmark: INTEGRATION_DIR + "/" + outdir_prefix + "_benchmark.txt"
    conda: "../envs/venn.yaml"
    shell: """
Rscript {params.rscript} \
	--chip_genes={input.chip_genes} \
	--rna_genes={input.rna_genes} \
	--gene_descriptions={input.regulondb_gene_product} \
	--TUs={input.regulondb_tus} \
	--BS={input.regulondb_sites} \
	--TFs={input.regulondb_gene_product} \
	--myTF={params.TF} \
	--venn.format={params.image_format} \
	--verbose={params.verbose} \
	--outdir={params.outdir} \
	--venn={output.venn} \
	--gene_table={output.gene_table} \
	--chip_genes_gff={output.chip_genes_gff} \
	--rna_genes_gff={output.rna_genes_gff} \
 	--regulon_genes_gff={output.regulon_genes_gff}
 &> {log} 
"""

#    script:
#        "../../RSnakeChunks/misc/gene_lists_comparison.R"


