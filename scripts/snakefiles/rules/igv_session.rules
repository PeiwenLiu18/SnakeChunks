# Author Claire Rioualen 
# This is a draft rule for generating IGV sessions


    
#if not "title" in config.keys():
#    sys.exit("Project title must be defined in the config file")

#if not "dataset" in config.keys():
#    sys.exit("Dataset ID must be defined in the config file")

#if not "title" in config.keys():
#    sys.exit("Project title must be defined in the config file")

#igv_session(filename, genome, gtf="", gff3="", peaks="", coverage="", transcripts_gtf=""):

# Genome & annotations
genome_dir = config["dir"]["genome"]


#def igv_inputs(wildcards):

#include: workflow.snakefile

print(workflow.snakefile)

#if not ("trimming" in config.keys()):
#    sys.exit("The parameter config['trimming'] should be specified in the config file. Empty quotes equal to no trimming.")

#TRIMMING_TOOLS = config["trimming"].split()

#if not ("mapping" in config.keys()):
#    sys.exit("The parameter config['mapping'] should be specified in the config file.")

#MAPPING_TOOLS = config["mapping"].split()

#if TRIMMING_TOOLS:
#    PREFIX = expand("{trimmer}_{aligner}", aligner=MAPPING_TOOLS, trimmer=TRIMMING_TOOLS)
#else:
#    PREFIX = expand("{aligner}", aligner=MAPPING_TOOLS)

#if not ("peakcalling" in config.keys()):
#    sys.exit("The parameter config['peakcalling'] should be specified in the config file.")

#PEAKCALLING_TOOLS = config["peakcalling"].split()

#os.path.isfile

#GENOME_COV_TDF  = expand(SAMPLE_DIR + "/{samples}/{samples}_{prefix}.tdf", samples=SAMPLE_IDS, prefix=PREFIX)
#PEAKS       = expand(expand(PEAKS_DIR + "/{treat}_vs_{control}/{{peakcaller}}/{treat}_vs_{control}_{{prefix}}_{{peakcaller}}.bed", zip, treat=TREATMENT, control=CONTROL), peakcaller=PEAKCALLING_TOOLS, prefix=PREFIX)

#print(PEAKS)

rule igv_session:
    input: 
#        igv_inputs,
        genome_fasta = os.path.join(genome_dir, config["genome"]["fasta_file"]),
        genome_gff3 = os.path.join(genome_dir, config["genome"]["gff3_file"]),
        genome_gtf = os.path.join(genome_dir, config["genome"]["gtf_file"])
    output:  "{dir}/igv_session.xml"
    params:
        genome_version = config["genome"]["version"]
#        samples_ids = read_table(config["metadata"]["samples"])["ID"],
#        samples_dir = config["dir"]["fastq"],
#        trim_tools = config["tools"]["trimming"],
#        outdir = "{dir}",
#        dataset = config["dataset"],
#        project_name = config["title"]
    log: "{dir}/index.log"
    benchmark: "{dir}/index_benchmark.tab"
#    script:
#        "../../python_lib/igv_session.py"
    shell: "touch {output}"


