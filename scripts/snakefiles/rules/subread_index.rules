# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

if not "version" in config["genome"].keys():
    sys.exit("Genome version must be defined in the config file")

if not "genome" in config["dir"].keys():
    sys.exit("Genome dir must be defined in the 'dir' section of the config file")

if not "fasta_file" in config["genome"].keys():
    sys.exit("Genome dir must be defined in the 'dir' section of the config file")

subread_dir = os.path.join(config["dir"]["genome"], "subread-align")

# Rule
rule subread_index:
    """
    Rule for the creation of subread index. Has to be done only once.  The
    output file is used to test whether the index already exists
    when aligning.

    Reference: Liao Y, Smyth GK and Shi W (2013). The Subread aligner:
    fast, accurate and scalable read mapping by seed-and-vote. 
    Nucleic Acids Research, 41(10):e108

    Required parameters:
        config["qsub"]
        config["dir"]["genome"]
        config["genome"]["version"]
        config["genome"]["fasta_file"]

    Optional parameters:

    Contributors: Claire Rioualen, Jacques van Helden
    """
    input: os.path.join(config["dir"]["genome"], config["genome"]["fasta_file"])
    output: subread_index = os.path.join(subread_dir, config["genome"]["fasta_file"])
    params:
        fasta = config["genome"]["fasta_file"], \
        dir = subread_dir, \
        qsub = config["qsub"] \
          + " -e " + subread_dir + "index_qsub.err" \
          + " -o " + subread_dir + "index_qsub.out"
    log: subread_dir + "/index.log"
    benchmark: subread_dir + "/index_benchmark.txt"
    conda: "../envs/subread.yaml"
    shell: """
(mkdir -p {params.dir}
cp {input} {params.dir}/{params.fasta}
subread-buildindex -o {params.dir}/{params.fasta}  {params.dir}/{params.fasta}) &> {log}
"""
